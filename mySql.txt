-- create database
CREATE DATABASE moviesProject;

-- select database
USE moviesProject;

-- create table
CREATE TABLE actor(
    actorId INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    actorName VARCHAR(50)
);

-- adding rows of data
INSERT INTO actor(actorName)
VALUES ('Daniel Radcliffe'),('Brad Pitt'),('Denzel Washington'),('Leonardo DiCaprio'),('Tom Hanks'),('Emma Watson'),('Cameron Diaz'),
       ('Sofia Vergara'),('Reese Witherspoon'),('Zoe Saldana'),('Jennifer Aniston'),('Robert Downey Jr'),('Chris Evans'),('Chris Hemsworth'),('Tom Holland');

CREATE TABLE director(
    directorId INT NOT NULL AUTO_INCREMENT PRIMARY KEY ,
    directorName VARCHAR(50)
);

INSERT INTO director(directorName)
VALUES ('Chris Columbus'),('Wolfgang Petersen'),('Antoine Fuqua'),('Martin Scorsese'),('Frank Darabont'),('Nancy Meyers'),('Anne Fletcher'),
       ('James Mangold'),('Anthony Russo'),('John Hamburg'),('Jon Favreau'),('Oley Sassone'),('Ron Howard'),('Jon Watts');

-- update existing table because current director was wrong
UPDATE director SET directorName ='Tim Story' WHERE directorName ='Oley Sassone';

CREATE TABLE genre(
    genreId INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    genreType VARCHAR(50)
);

INSERT INTO genre(genreType)
VALUES ('Fantasy'),('Drama'),('Action'),('Comedy'),('Crime'),('Biography'),('Romance'),('Sci-fi'),('Adventure'),('Music');

CREATE TABLE movie(
    movieId INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    movieTitle VARCHAR(50),
    movieReleaseYear INT,
    movieDirectorId INT,
    movieGenreId INT,
    FOREIGN KEY (movieDirectorId) REFERENCES director(directorId),
    FOREIGN KEY (movieGenreId) REFERENCES genre(genreId)
);

INSERT INTO movie(movieTitle, movieReleaseYear, movieDirectorId, movieGenreId)
VALUES ('Harry Potter and the prisoner of Azkaban',2004,1,1),
       ('Troy',2004,2,2),
       ('The Equalizer',2014,3,3),
       ('The Wolf of Wall Street',2013,4,5),
       ('The Green Mile',1999,5,2),
       ('The Holiday',2006,6,7),
       ('Hot Pursuit',2015,7,4),
       ('Walk the Line',2005,8,10),
       ('Avengers Infinity War',2018,9,8),
       ('Along Came Polly',2004,10,4),
       ('Iron man',2008,11,8),
       ('Fantastic Four',2005,12,1),
       ('Rush',2013,13,3),
       ('Spider-Man No Way Home',2021,14,9);

CREATE TABLE actorMovie(
    actorMovieId INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    actorMovieMId INT,
    actorMovieAId INT,
    FOREIGN KEY (actorMovieMId) REFERENCES movie(movieId),
    FOREIGN KEY (actorMovieAId) REFERENCES actor(actorId)
);

INSERT INTO actorMovie(actorMovieMId, actorMovieAId)
VALUES (1,1),(1,6),(2,2),(3,3),(4,4),(5,5),(6,7),(7,8),(8,9),(9,10),(10,11),(11,12),(12,13),(13,14),(14,15);

CREATE TABLE streamingApp(
  streamingAppId INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
  streamingAppTitle VARCHAR(50)
);

INSERT INTO streamingApp(streamingAppTitle)
VALUES ('Netflix'),('HBO Max'),('Viaplay'),('Disney Plus');

CREATE TABLE streamingAppMovie(
    streamingAppMovieId INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    streamingAppMovieMId INT,
    streamingAppMovieSId INT,
    FOREIGN KEY (streamingAppMovieMId) REFERENCES movie(movieId),
    FOREIGN KEY (streamingAppMovieSId) REFERENCES streamingApp(streamingAppId)
);

INSERT INTO streamingAppMovie(streamingAppMovieMId, streamingAppMovieSId)
VALUES (1,1),(2,2),(3,3),(4,4),(5,1),(6,2),(7,3),(8,4),(9,1),(10,2),(11,3),(12,4),(13,1),(14,2);

-- inner join
SELECT movie.movieTitle,actor.actorName FROM movie INNER JOIN actorMovie ON movie.movieId = actorMovie.actorMovieMId
INNER JOIN actor ON actorMovie.actorMovieAId = actor.actorId;

--inner join mellan alla tabeller vi vill visa i movie
SELECT movie.movieTitle, genre.genreType,actor.actorName,director.directorName,streamingApp.streamingAppTitle
FROM genre INNER JOIN movie ON genre.genreId = movie.movieGenreId
INNER JOIN actorMovie ON movie.movieId = actorMovie.actorMovieMId
INNER JOIN actor ON actorMovie.actorMovieAId = actor.actorId
INNER JOIN director ON movie.movieDirectorId = director.directorId
INNER JOIN streamingAppMovie ON movie.movieId = streamingAppMovie.streamingAppMovieMId
INNER JOIN streamingApp ON streamingApp.streamingAppId = streamingAppMovie.streamingAppMovieSId;
